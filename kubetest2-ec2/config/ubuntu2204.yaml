#cloud-config
# This bootstraps a public ubuntu 2204 image from scratch.
system_info:
  default_user:
    name: ec2-user
    groups: root
package_upgrade: true
package_update: true
packages:
    - nfs-common
    - socat
    - conntrack
    - awscli
    - net-tools
    - jq
    - python3
write_files:
  - path: /tmp/bootstrap/extra-fetches.yaml
    content: |
      containerd-env: https://raw.githubusercontent.com/kubernetes/test-infra/master/jobs/e2e_node/containerd/containerd-main/env
  - path: /etc/systemd/system/containerd-installation.service
    permissions: 0644
    owner: root
    content: |
      # installed by cloud-init
      [Unit]
      Description=Download and install containerd binaries and configurations.
      After=network-online.target
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStartPre=/bin/chmod 544 /home/containerd/configure.sh
      ExecStart=/home/containerd/configure.sh
      [Install]
      WantedBy=containerd.target
  - path: /etc/systemd/system/containerd.service
    permissions: 0644
    owner: root
    content: |
      # installed by cloud-init
      [Unit]
      Description=containerd container runtime
      Documentation=https://containerd.io
      After=containerd-installation.service
      [Service]
      Restart=always
      RestartSec=5
      Delegate=yes
      KillMode=process
      OOMScoreAdjust=-999
      LimitNOFILE=1048576
      LimitNPROC=infinity
      LimitCORE=infinity
      TasksMax=infinity
      ExecStartPre=/sbin/modprobe overlay
      ExecStart=/home/containerd/usr/local/bin/containerd
      [Install]
      WantedBy=containerd.target
  - path: /etc/systemd/system/containerd.target
    permissions: 0644
    owner: root
    content: |
      [Unit]
      Description=Containerd
      [Install]
      WantedBy=multi-user.target
  - path: /etc/sysctl.d/k8s.conf
    permissions: 0644
    owner: root
    content: |
      net.ipv4.ip_forward=1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  - path: /etc/kubernetes/credential-provider.yaml
    permissions: 0644
    owner: root
    content: |
      kind: CredentialProviderConfig
      apiVersion: kubelet.config.k8s.io/v1
      providers:
      - name: ecr-credential-provider
        apiVersion: credentialprovider.kubelet.k8s.io/v1
        matchImages:
        - "*.dkr.ecr.*.amazonaws.com"
        - "*.dkr.ecr.*.amazonaws.com.cn"
        - "*.dkr.ecr-fips.*.amazonaws.com"
        - "*.dkr.ecr.us-iso-east-1.c2s.ic.gov"
        - "*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov"
        defaultCacheDuration: 12h
  - path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    permissions: 0644
    owner: root
    content: |
      [Service]
      Environment="KUBELET_EXTRA_ARGS=--image-credential-provider-bin-dir=/usr/local/bin --image-credential-provider-config=/etc/kubernetes/credential-provider.yaml"
      Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
      Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
      EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
      EnvironmentFile=-/etc/default/kubelet
      ExecStart=
      ExecStart=/usr/local/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
  - path: /usr/lib/systemd/system/kubelet.service
    permissions: 0644
    owner: root
    content: |
      [Unit]
      Description=kubelet: The Kubernetes Node Agent
      Documentation=https://kubernetes.io/docs/home/
      Wants=network-online.target
      After=network-online.target

      [Service]
      ExecStart=/usr/local/bin/kubelet
      Restart=always
      StartLimitInterval=0
      RestartSec=10

      [Install]
      WantedBy=multi-user.target
  - path: /usr/local/bin/run-kubeadm.sh
    permissions: '0755'
    owner: root
    encoding: gzip+base64
    content: {{RUN_KUBEADM_SH}}
  - path: /usr/local/bin/run-post-install.sh
    permissions: '0755'
    owner: root
    content: {{RUN_POST_INSTALL_SH}}
    encoding: gzip+base64
  - path: /home/containerd/configure.sh
    encoding: gzip+base64
    content: {{CONFIGURE_SH}}
    owner: root
    permissions: '0544'
  - path: /etc/kubernetes/kubeadm-init.yaml
    encoding: gzip+base64
    content: {{KUBEADM_INIT_YAML}}
    owner: root
    permissions: '0544'
  - path: /etc/kubernetes/kubeadm-join.yaml
    encoding: gzip+base64
    content: {{KUBEADM_JOIN_YAML}}
    owner: root
    permissions: '0544'
runcmd:
  - ufw disable || echo "ufw not installed"
  - systemctl stop apparmor
  - systemctl disable apparmor
  - iptables -F && iptables -X  && iptables -t nat -F  && iptables -t nat -X && iptables -t mangle -F  && iptables -t mangle -X  && iptables -P INPUT ACCEPT  && iptables -P FORWARD ACCEPT -w 5 && iptables -P OUTPUT ACCEPT -w 5
  - "TOKEN=$(curl --request PUT 'http://169.254.169.254/latest/api/token' --header 'X-aws-ec2-metadata-token-ttl-seconds: 3600' -s) && echo \"$(curl -s -f -m 1 http://169.254.169.254/latest/meta-data/local-ipv4 --header 'X-aws-ec2-metadata-token: '$TOKEN) $(curl -s -f -m 1 http://169.254.169.254/latest/meta-data/instance-id/ --header 'X-aws-ec2-metadata-token: '$TOKEN)\" | sudo tee -a /etc/hosts"
  - "sed -i \"s/^.*ReadEtcHosts.*/ReadEtcHosts=no/\" /etc/systemd/resolved.conf"
  - "sed -i \"s/^MACAddressPolicy=.*/MACAddressPolicy=none/\" /usr/lib/systemd/network/99-default.link"
  - systemctl restart systemd-resolved
  - rm /usr/lib/systemd/logind.conf.d/unattended-upgrades-logind-maxdelay.conf
  - systemctl restart systemd-logind
  - systemctl daemon-reload
  - systemctl enable containerd-installation.service
  - systemctl enable containerd.service
  - systemctl enable containerd.target
  - systemctl start containerd.target
  - mkdir -p /etc/kubernetes/manifests
  - KUBEADM_CONTROL_PLANE="{{KUBEADM_CONTROL_PLANE}}" KUBEADM_CONTROL_PLANE_IP="{{KUBEADM_CONTROL_PLANE_IP}}" /usr/local/bin/run-kubeadm.sh
  - KUBEADM_CONTROL_PLANE="{{KUBEADM_CONTROL_PLANE}}" /usr/local/bin/run-post-install.sh
